diff --git a/CMakeLists.txt b/CMakeLists.txt
index fad0497f..8e72cb34 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,9 +11,9 @@ project(liquid VERSION ${LIQUID_VERSION} LANGUAGES C CXX)
 
 # ---------------------------------------- options ----------------------------------------
 
-option(BUILD_EXAMPLES   "Set to ON to build examples"           ON)
-option(BUILD_AUTOTESTS  "Set to ON to build autotest program"   ON)
-option(BUILD_BENCHMARKS "Set to ON to build benchmark program"  ON)
+option(BUILD_EXAMPLES   "Set to ON to build examples"           OFF)
+option(BUILD_AUTOTESTS  "Set to ON to build autotest program"   OFF)
+option(BUILD_BENCHMARKS "Set to ON to build benchmark program"  OFF)
 option(ENABLE_SIMD      "Set to ON to build SIMD extensions"    ON)
 option(BUILD_SANDBOX    "Set to ON to build sandbox programs"   OFF)
 option(BUILD_DOC        "Set to ON to build documentation"      OFF)
diff --git a/include/liquid.h b/include/liquid.h
index 3db82f8b..246bf0ec 100644
--- a/include/liquid.h
+++ b/include/liquid.h
@@ -9081,6 +9081,7 @@ int ofdmframesync_execute(ofdmframesync _q,
 // query methods
 float ofdmframesync_get_rssi(ofdmframesync _q); // received signal strength indication
 float ofdmframesync_get_cfo(ofdmframesync _q);  // carrier offset estimate
+float ofdmframesync_get_phi(ofdmframesync _q);  // phase offset estimate
 
 // set methods
 int ofdmframesync_set_cfo(ofdmframesync _q, float _cfo);  // set carrier offset estimate
diff --git a/src/multichannel/src/ofdmframesync.c b/src/multichannel/src/ofdmframesync.c
index d15eeadc..1d8e3575 100644
--- a/src/multichannel/src/ofdmframesync.c
+++ b/src/multichannel/src/ofdmframesync.c
@@ -131,8 +131,9 @@ struct ofdmframesync_s {
     // synchronizer objects
     nco_crcf nco_rx;        // numerically-controlled oscillator
     msequence ms_pilot;     // pilot sequence generator
-    float phi_prime;        // ...
+    float phi_prime;        // pilot phase deviation 
     float p1_prime;         // filtered pilot phase slope
+    float phi_hat;          // phase offset estimate
 
 #if OFDMFRAMESYNC_ENABLE_SQUELCH
     // coarse signal detection
@@ -379,6 +380,7 @@ int ofdmframesync_reset(ofdmframesync _q)
     _q->s_hat_1 = 0.0f;
     _q->phi_prime = 0.0f;
     _q->p1_prime = 0.0f;
+    _q->phi_hat = 0.0f;
 
     // set thresholds (increase for small number of subcarriers)
     _q->plcp_detect_thresh = (_q->M > 44) ? 0.35f : 0.35f + 0.01f*(44 - _q->M);
@@ -460,6 +462,12 @@ int ofdmframesync_set_cfo(ofdmframesync _q, float _cfo)
     return nco_crcf_set_frequency(_q->nco_rx, _cfo);
 }
 
+// get receiver phase offset estimate
+float ofdmframesync_get_phi(ofdmframesync _q)
+{
+    return _q->phi_hat;
+}
+
 //
 // internal methods
 //
@@ -1002,15 +1010,22 @@ int ofdmframesync_estimate_eqgain_poly(ofdmframesync _q,
     polyf_fit(x_freq, y_abs, N, p_abs, _order+1);
     polyf_fit(x_freq, y_arg, N, p_arg, _order+1);
 
+    // Reset Phase-offset 
+    _q->phi_hat = 0.0f;
+
     // compute subcarrier gain
     for (i=0; i<_q->M; i++) {
         float freq = (i > _q->M2) ? (float)i - (float)(_q->M) : (float)i;
         freq = freq / (float)(_q->M);
         float A     = polyf_val(p_abs, _order+1, freq);
         float theta = polyf_val(p_arg, _order+1, freq);
+        _q->phi_hat += theta;
         _q->G[i] = (_q->p[i] == OFDMFRAME_SCTYPE_NULL) ? 0.0f : A * liquid_cexpjf(theta);
     }
 
+    // Average phase offset
+    _q->phi_hat /= _q->M;
+
 #if 0
     for (i=0; i<N; i++)
         printf("x(%3u) = %12.8f; y_abs(%3u) = %12.8f; y_arg(%3u) = %12.8f;\n",
